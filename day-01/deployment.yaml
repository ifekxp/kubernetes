# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: myfastapi-dev
  labels:
    name: myfastapi-dev
---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myfastapi-deployment
  namespace: myfastapi-dev
  labels:
    app: myfastapi-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myfastapi-app
  template:
    metadata:
      labels:
        app: myfastapi-app
    spec:
      # Pod
      # Pod security context
      # Ref: https://cheatsheetseries.owasp.org/cheatsheets/Kubernetes_Security_Cheat_Sheet.html
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000     
      # Volume  
      volumes:
      - name: data-volume
        emptyDir:       
          sizeLimit: 100Mi
      - name: secret-alphavantage
        secret:
          secretName: alphavantage
      containers:
      - name: myapi
        image: docker.io/library/myfastapi:1.0
        imagePullPolicy: IfNotPresent
        # Pod resource
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        # Pod health check    
        livenessProbe:
          httpGet:
            path: /liveness
            port: myfastapi-port
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /liveness
            port: myfastapi-port
          initialDelaySeconds: 5
          periodSeconds: 10       
        # Pod security optoins
        securityContext:  
          readOnlyRootFilesystem: true  
          runAsNonRoot: true
        # Data volume
        volumeMounts:
        - name: data-volume
          mountPath: /data/          
        - name: secret-alphavantage
          mountPath: /etc/secret
          readOnly: true 
        # Pod port  
        ports:
        - name: myfastapi-port
          containerPort: 80
          protocol: TCP
---
# Service
apiVersion: v1
kind: Service
metadata:
  name: myfastapi-svc
  namespace: myfastapi-dev
spec:
  # Using ClusterIP instead of NodePort
  selector:
    app: myfastapi-app
  ports:
    - port: 8080
      targetPort: myfastapi-port
      protocol: TCP
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: myfastapi-ingress
  namespace: myfastapi-dev
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: myfastapi.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: myfastapi-svc
            port:
              number: 8080

